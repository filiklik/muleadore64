<?xml version="1.0" encoding="UTF-8"?>

<mule
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:twitter="http://www.mulesoft.org/schema/mule/twitter"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/twitter http://www.mulesoft.org/schema/mule/twitter/current/mule-twitter.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <anypoint-mq:config name="Anypoint_MQ_Configuration-c64-control-hub" doc:name="Anypoint MQ Configuration">
        <anypoint-mq:provider url="https://mq-us-east-1.anypoint.mulesoft.com/api/v1" clientId="2cc7b2ae1e6f47be9ed9638f489d2a13" clientSecret="80bed3adfe3b449eA866EC803C9C9A37"/>
    </anypoint-mq:config>
    <twitter:config name="Twitter__Configuration-c64" accessKey="724851736842756100-kyTVBaK1jNNXaIEbAwUED5o7IR1nVQT" accessSecret="CJvzXQFJJV5IS4orXghM6PiliL0NK36gnrBUxWw77KGwu" consumerKey="84ZvnEtJdEzY2yeLLaWfCAsSC" consumerSecret="fgN4GTb6rVQPp1AaHQ4EJH4E75CJgAk1TxENPGVVsNgRgQUPZZ" doc:name="Twitter: Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="api.openweathermap.org" port="80" basePath="data/2.5/weather" doc:name="HTTP Request Configuration"/>
    <http:request-config name="HTTP_Request_OpenWeatherMap" host="api.openweathermap.org" port="80" doc:name="HTTP Request Configuration"/>
    <twitter:config name="Twitter__Configuration-Steve" accessKey="1627285890-XfCvMumITmruODTbLfESFRnyW20knhN84SQHrel" accessSecret="6yW1QQYh4Fd6hh3vUmgAvYSmDnZTObeh6spa3YmFNY" consumerKey="v3TFFvEqkkUSMJhn91yPA" consumerSecret="sv8n88vbe9rDVwvrPTj7UhYVw9GP6TUQuDRADSIY6s" doc:name="Twitter: Configuration"/>
    <flow name="control-static-content">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/control/*" doc:name="HTTP"/>
        <http:static-resource-handler resourceBase="${app.home}/static/control" defaultFile="index.html" doc:name="HTTP Static Resource Handler"/>
    </flow>
    <flow name="weather-poll">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="10" timeUnit="MINUTES"/>
            <flow-ref name="weather-api" doc:name="weather-api"/>
        </poll>
        <logger message="Invoked weather flow from poll" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="weather-api">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/api/weather" doc:name="HTTP"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="weather" doc:name="VM"/>
    </flow>
    <flow name="weather-produce-msg">
        <vm:inbound-endpoint exchange-pattern="one-way" path="weather" doc:name="VM"/>
        <http:request config-ref="HTTP_Request_OpenWeatherMap" path="data/2.5/group" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="id" value="5391959,3435910"/>
                <http:query-param paramName="units" value="imperial"/>
                <http:query-param paramName="appid" value="deb15d321034ef704f75416ff633b9a5"/>
            </http:request-builder>
        </http:request>
        <set-variable variableName="messageId" value="#[message.id]" doc:name="Variable"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var weatherString = () -> "SF: " ++ payload.list[0].main.temp as :string {format: "#"} ++ "F $(payload.list[0].weather[0].main), BA: " ++ (((payload.list[1].main.temp as :number) -32)*5/9) as :string {format: "#"} ++ "C $(payload.list[1].weather[0].main)"
---
{
	type: "weather",
	id: flowVars.messageId,
	value: weatherString(),
	c64command: "7" ++ weatherString()
}]]></dw:set-payload>
        </dw:transform-message>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="Weather command sent: #[message.payload]" level="INFO" doc:name="Logger"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <anypoint-mq:publish config-ref="Anypoint_MQ_Configuration-c64-control-hub" destination="c64-interactive-queue" doc:name="Anypoint MQ"/>
    </flow>
    <flow name="stream-recieve-tweets">
        <twitter:filtered-stream config-ref="Twitter__Configuration-c64" doc:name="Twitter (Streaming)">
            <twitter:keywords>
                <twitter:keyword>@muleadore64</twitter:keyword>
            </twitter:keywords>
        </twitter:filtered-stream>
        <set-variable variableName="messageId" value="#[message.id]" doc:name="Variable"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="list_Status.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	type: "tweet",
	id: flowVars.messageId,
	user: "@$(payload.user.screenName)",
	text: payload.text,
	c64command: "1$(payload.text)\n   - @$(payload.user.screenName), at " ++ payload.createdAt as :datetime {format: "HH:mm"}
}]]></dw:set-payload>
        </dw:transform-message>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="New Tweet Detected.  Sending message: #[message.payload]" level="INFO" doc:name="Logger"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <anypoint-mq:publish config-ref="Anypoint_MQ_Configuration-c64-control-hub" destination="c64-interactive-queue" doc:name="Anypoint MQ - interactive queue"/>
    </flow>
    <flow name="send-tweet">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/api/tweet" allowedMethods="POST" doc:name="HTTP"/>
        <set-payload value="@muleadore64: #[message.payload.tweet]" mimeType="text/plain" doc:name="Set Payload"/>
        <twitter:update-status config-ref="Twitter__Configuration-c64" status="#[message.payload]" doc:name="Twitter"/>
        <logger message="Tweet status sent: #[message.payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="welcome">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/api/welcome" allowedMethods="PUT" doc:name="HTTP"/>
        <set-payload value="{&quot;type&quot;:&quot;welcome&quot;, &quot;id&quot;:&quot;#[message.id]&quot;, &quot;c64command&quot;:&quot;4&quot;}" mimeType="application/json" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger message="Welcome command sent: #[message.payload]" level="INFO" doc:name="Logger"/>
        <anypoint-mq:publish config-ref="Anypoint_MQ_Configuration-c64-control-hub" destination="c64-interactive-queue" doc:name="Anypoint MQ"/>
    </flow>
    <flow name="color">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/api/color" allowedMethods="POST" doc:name="HTTP"/>
        <set-variable variableName="messageId" value="#[message.id]" doc:name="Variable"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger message="Incoming color command: #[message.payload]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	type: "color",
	id: flowVars.messageId,
	entity: payload.colortype,
	value: payload.color,
	hex: payload.hex,
	poke: payload.poke,
	c64command: ("3" ++ payload.poke as :string) when payload.colortype == "background" otherwise ("2" ++ payload.poke as :string)
}]]></dw:set-payload>
        </dw:transform-message>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="Queueing transformed color command: #[message.payload]" level="INFO" doc:name="Logger"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <anypoint-mq:publish config-ref="Anypoint_MQ_Configuration-c64-control-hub" destination="c64-interactive-queue" doc:name="Anypoint MQ"/>
    </flow>
    <flow name="beep">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/api/beep" doc:name="HTTP"/>
        <set-payload value="{&quot;type&quot;:&quot;beep&quot;, &quot;id&quot;:&quot;#[message.id]&quot;, &quot;c64command&quot;: &quot;5&quot;}" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger message="Sending beep command: #[message.payload]" level="INFO" doc:name="Logger"/>
        <anypoint-mq:publish config-ref="Anypoint_MQ_Configuration-c64-control-hub" destination="c64-interactive-queue" doc:name="Anypoint MQ"/>
    </flow>
    <flow name="last-message-sent">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/api/lastMsg" doc:name="HTTP"/>
        <component class="com.mulesoft.c64.Reader" doc:name="Java"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
</mule>
